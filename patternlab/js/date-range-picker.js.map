{"version":3,"sources":["src/patterns/components/usa-date-range-picker/date-range-picker.js"],"names":["behavior","require","select","PREFIX","prefix","getDatePickerContext","isDateInputInvalid","updateCalendarIfVisible","DATE_PICKER_CLASS","DATE_RANGE_PICKER_CLASS","DATE_RANGE_PICKER_RANGE_START_CLASS","DATE_RANGE_PICKER_RANGE_END_CLASS","DATE_PICKER","DATE_RANGE_PICKER","DATE_RANGE_PICKER_RANGE_START","DATE_RANGE_PICKER_RANGE_END","DEFAULT_MIN_DATE","getDateRangePickerContext","el","dateRangePickerEl","closest","Error","rangeStartEl","querySelector","rangeEndEl","handleRangeStartUpdate","internalInputEl","updatedDate","value","dataset","minDate","rangeDate","defaultDate","handleRangeEndUpdate","maxDate","enhanceDateRangePicker","rangeStart","rangeEnd","classList","add","dateRangePicker","init","root","forEach","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\nconst behavior = require('../../../utils/behavior');\r\nconst select = require('../../../utils/select');\r\nconst { prefix: PREFIX } = require('../../../config');\r\nconst {\r\n  getDatePickerContext,\r\n  isDateInputInvalid,\r\n  updateCalendarIfVisible\r\n} = require('../usa-date-picker/date-picker');\r\n\r\nconst DATE_PICKER_CLASS = `${PREFIX}-date-picker`;\r\nconst DATE_RANGE_PICKER_CLASS = `${PREFIX}-date-range-picker`;\r\nconst DATE_RANGE_PICKER_RANGE_START_CLASS = `${DATE_RANGE_PICKER_CLASS}__range-start`;\r\nconst DATE_RANGE_PICKER_RANGE_END_CLASS = `${DATE_RANGE_PICKER_CLASS}__range-end`;\r\n\r\nconst DATE_PICKER = `.${DATE_PICKER_CLASS}`;\r\nconst DATE_RANGE_PICKER = `.${DATE_RANGE_PICKER_CLASS}`;\r\nconst DATE_RANGE_PICKER_RANGE_START = `.${DATE_RANGE_PICKER_RANGE_START_CLASS}`;\r\nconst DATE_RANGE_PICKER_RANGE_END = `.${DATE_RANGE_PICKER_RANGE_END_CLASS}`;\r\n\r\nconst DEFAULT_MIN_DATE = '0000-01-01';\r\n\r\n/**\r\n * The properties and elements within the date range picker.\r\n * @typedef {Object} DateRangePickerContext\r\n * @property {HTMLElement} dateRangePickerEl\r\n * @property {HTMLElement} rangeStartEl\r\n * @property {HTMLElement} rangeEndEl\r\n */\r\n\r\n/**\r\n * Get an object of the properties and elements belonging directly to the given\r\n * date picker component.\r\n *\r\n * @param {HTMLElement} el the element within the date picker\r\n * @returns {DateRangePickerContext} elements\r\n */\r\nconst getDateRangePickerContext = (el) => {\r\n  const dateRangePickerEl = el.closest(DATE_RANGE_PICKER);\r\n\r\n  if (!dateRangePickerEl) {\r\n    throw new Error(`Element is missing outer ${DATE_RANGE_PICKER}`);\r\n  }\r\n\r\n  const rangeStartEl = dateRangePickerEl.querySelector(\r\n    DATE_RANGE_PICKER_RANGE_START\r\n  );\r\n  const rangeEndEl = dateRangePickerEl.querySelector(\r\n    DATE_RANGE_PICKER_RANGE_END\r\n  );\r\n\r\n  return {\r\n    dateRangePickerEl,\r\n    rangeStartEl,\r\n    rangeEndEl\r\n  };\r\n};\r\n\r\n/**\r\n * handle update from range start date picker\r\n *\r\n * @param {HTMLElement} el an element within the date range picker\r\n */\r\nconst handleRangeStartUpdate = (el) => {\r\n  const {\r\n    dateRangePickerEl,\r\n    rangeStartEl,\r\n    rangeEndEl\r\n  } = getDateRangePickerContext(el);\r\n  const { internalInputEl } = getDatePickerContext(rangeStartEl);\r\n  const updatedDate = internalInputEl.value;\r\n\r\n  if (updatedDate && !isDateInputInvalid(internalInputEl)) {\r\n    rangeEndEl.dataset.minDate = updatedDate;\r\n    rangeEndEl.dataset.rangeDate = updatedDate;\r\n    rangeEndEl.dataset.defaultDate = updatedDate;\r\n  }\r\n  else {\r\n    rangeEndEl.dataset.minDate = dateRangePickerEl.dataset.minDate || '';\r\n    rangeEndEl.dataset.rangeDate = '';\r\n    rangeEndEl.dataset.defaultDate = '';\r\n  }\r\n\r\n  updateCalendarIfVisible(rangeEndEl);\r\n};\r\n\r\n/**\r\n * handle update from range start date picker\r\n *\r\n * @param {HTMLElement} el an element within the date range picker\r\n */\r\nconst handleRangeEndUpdate = (el) => {\r\n  const {\r\n    dateRangePickerEl,\r\n    rangeStartEl,\r\n    rangeEndEl\r\n  } = getDateRangePickerContext(el);\r\n  const { internalInputEl } = getDatePickerContext(rangeEndEl);\r\n  const updatedDate = internalInputEl.value;\r\n\r\n  if (updatedDate && !isDateInputInvalid(internalInputEl)) {\r\n    rangeStartEl.dataset.maxDate = updatedDate;\r\n    rangeStartEl.dataset.rangeDate = updatedDate;\r\n    rangeStartEl.dataset.defaultDate = updatedDate;\r\n  }\r\n  else {\r\n    rangeStartEl.dataset.maxDate = dateRangePickerEl.dataset.maxDate || '';\r\n    rangeStartEl.dataset.rangeDate = '';\r\n    rangeStartEl.dataset.defaultDate = '';\r\n  }\r\n\r\n  updateCalendarIfVisible(rangeStartEl);\r\n};\r\n\r\n/**\r\n * Enhance an input with the date picker elements\r\n *\r\n * @param {HTMLElement} el The initial wrapping element of the date range picker component\r\n */\r\nconst enhanceDateRangePicker = (el) => {\r\n  const dateRangePickerEl = el.closest(DATE_RANGE_PICKER);\r\n\r\n  const [rangeStart, rangeEnd] = select(DATE_PICKER, dateRangePickerEl);\r\n\r\n  if (!rangeStart) {\r\n    throw new Error(\r\n      `${DATE_RANGE_PICKER} is missing inner two '${DATE_PICKER}' elements`\r\n    );\r\n  }\r\n\r\n  if (!rangeEnd) {\r\n    throw new Error(\r\n      `${DATE_RANGE_PICKER} is missing second '${DATE_PICKER}' element`\r\n    );\r\n  }\r\n\r\n  rangeStart.classList.add(DATE_RANGE_PICKER_RANGE_START_CLASS);\r\n  rangeEnd.classList.add(DATE_RANGE_PICKER_RANGE_END_CLASS);\r\n\r\n  if (!dateRangePickerEl.dataset.minDate) {\r\n    dateRangePickerEl.dataset.minDate = DEFAULT_MIN_DATE;\r\n  }\r\n\r\n  const minDate = dateRangePickerEl.dataset.minDate;\r\n  rangeStart.dataset.minDate = minDate;\r\n  rangeEnd.dataset.minDate = minDate;\r\n\r\n  const maxDate = dateRangePickerEl.dataset.maxDate;\r\n  if (maxDate) {\r\n    rangeStart.dataset.maxDate = maxDate;\r\n    rangeEnd.dataset.maxDate = maxDate;\r\n  }\r\n\r\n  handleRangeStartUpdate(dateRangePickerEl);\r\n  handleRangeEndUpdate(dateRangePickerEl);\r\n};\r\n\r\nconst dateRangePicker = behavior(\r\n  {\r\n    'input change': {\r\n      [DATE_RANGE_PICKER_RANGE_START]() {\r\n        handleRangeStartUpdate(this);\r\n      },\r\n      [DATE_RANGE_PICKER_RANGE_END]() {\r\n        handleRangeEndUpdate(this);\r\n      }\r\n    }\r\n  },\r\n  {\r\n    init(root) {\r\n      select(DATE_RANGE_PICKER, root).forEach((dateRangePickerEl) => {\r\n        enhanceDateRangePicker(dateRangePickerEl);\r\n      });\r\n    }\r\n  }\r\n);\r\n\r\nmodule.exports = dateRangePicker;\r\n"],"file":"date-range-picker.js"}