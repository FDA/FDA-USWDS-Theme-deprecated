{"version":3,"sources":["src/patterns/components/usa-combo-box/combo-box.js"],"names":["receptor","require","select","behavior","PREFIX","prefix","CLICK","COMBO_BOX_CLASS","COMBO_BOX_PRISTINE_CLASS","SELECT_CLASS","INPUT_CLASS","CLEAR_INPUT_BUTTON_CLASS","CLEAR_INPUT_BUTTON_WRAPPER_CLASS","INPUT_BUTTON_SEPARATOR_CLASS","TOGGLE_LIST_BUTTON_CLASS","TOGGLE_LIST_BUTTON_WRAPPER_CLASS","LIST_CLASS","LIST_OPTION_CLASS","LIST_OPTION_FOCUSED_CLASS","LIST_OPTION_SELECTED_CLASS","STATUS_CLASS","COMBO_BOX","SELECT","INPUT","CLEAR_INPUT_BUTTON","TOGGLE_LIST_BUTTON","LIST","LIST_OPTION","LIST_OPTION_FOCUSED","LIST_OPTION_SELECTED","STATUS","noop","changeElementValue","el","value","elementToChange","event","CustomEvent","bubbles","cancelable","detail","dispatchEvent","getComboBoxContext","comboBoxEl","closest","Error","selectEl","querySelector","inputEl","listEl","statusEl","focusedOptionEl","selectedOptionEl","toggleListBtnEl","clearInputBtnEl","isPristine","classList","contains","disable","hidden","disabled","enable","enhanceComboBox","selectId","id","listId","assistiveHintID","additionalAttributes","defaultValue","dataset","placeholder","selectedOption","push","i","len","options","length","optionEl","setAttribute","add","forEach","name","hasAttribute","getAttribute","removeAttribute","insertAdjacentHTML","join","text","highlightOption","currentEl","nextEl","skipFocus","preventScroll","tabIndex","remove","optionBottom","offsetTop","offsetHeight","currentBottom","scrollTop","focus","displayList","selectedItemId","listOptionBaseId","inputValue","toLowerCase","indexOf","numOptions","optionHtml","map","option","index","optionId","classes","tabindex","noResults","innerHTML","hideList","selectItem","listOptionEl","textContent","clearInput","clearButtonEl","listShown","resetSelection","selectValue","completeSelection","handleEscape","target","handleDown","nextOptionEl","nextSibling","preventDefault","handleEnterFromInput","handleTabFromListOption","handleEnterFromListOption","handleUpFromListOption","previousSibling","handleMousemove","isCurrentlyFocused","toggleList","handleClickFromInput","comboBox","relatedTarget","keymap","ArrowDown","Down","Escape","Enter","ArrowUp","Up","Tab","init","root","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\nconst receptor = require('receptor');\r\nconst select = require('../../../utils/select');\r\nconst behavior = require('../../../utils/behavior');\r\nconst { prefix: PREFIX } = require('../../../config');\r\nconst CLICK = 'click';\r\n\r\nconst COMBO_BOX_CLASS = `${PREFIX}-combo-box`;\r\nconst COMBO_BOX_PRISTINE_CLASS = `${COMBO_BOX_CLASS}--pristine`;\r\nconst SELECT_CLASS = `${COMBO_BOX_CLASS}__select`;\r\nconst INPUT_CLASS = `${COMBO_BOX_CLASS}__input`;\r\nconst CLEAR_INPUT_BUTTON_CLASS = `${COMBO_BOX_CLASS}__clear-input`;\r\nconst CLEAR_INPUT_BUTTON_WRAPPER_CLASS = `${CLEAR_INPUT_BUTTON_CLASS}__wrapper`;\r\nconst INPUT_BUTTON_SEPARATOR_CLASS = `${COMBO_BOX_CLASS}__input-button-separator`;\r\nconst TOGGLE_LIST_BUTTON_CLASS = `${COMBO_BOX_CLASS}__toggle-list`;\r\nconst TOGGLE_LIST_BUTTON_WRAPPER_CLASS = `${TOGGLE_LIST_BUTTON_CLASS}__wrapper`;\r\nconst LIST_CLASS = `${COMBO_BOX_CLASS}__list`;\r\nconst LIST_OPTION_CLASS = `${COMBO_BOX_CLASS}__list-option`;\r\nconst LIST_OPTION_FOCUSED_CLASS = `${LIST_OPTION_CLASS}--focused`;\r\nconst LIST_OPTION_SELECTED_CLASS = `${LIST_OPTION_CLASS}--selected`;\r\nconst STATUS_CLASS = `${COMBO_BOX_CLASS}__status`;\r\n\r\nconst COMBO_BOX = `.${COMBO_BOX_CLASS}`;\r\nconst SELECT = `.${SELECT_CLASS}`;\r\nconst INPUT = `.${INPUT_CLASS}`;\r\nconst CLEAR_INPUT_BUTTON = `.${CLEAR_INPUT_BUTTON_CLASS}`;\r\nconst TOGGLE_LIST_BUTTON = `.${TOGGLE_LIST_BUTTON_CLASS}`;\r\nconst LIST = `.${LIST_CLASS}`;\r\nconst LIST_OPTION = `.${LIST_OPTION_CLASS}`;\r\nconst LIST_OPTION_FOCUSED = `.${LIST_OPTION_FOCUSED_CLASS}`;\r\nconst LIST_OPTION_SELECTED = `.${LIST_OPTION_SELECTED_CLASS}`;\r\nconst STATUS = `.${STATUS_CLASS}`;\r\n\r\nconst noop = () => {};\r\n\r\n/**\r\n * set the value of the element and dispatch a change event\r\n *\r\n * @param {HTMLInputElement|HTMLSelectElement} el The element to update\r\n * @param {string} value The new value of the element\r\n */\r\nconst changeElementValue = (el, value = '') => {\r\n  const elementToChange = el;\r\n  elementToChange.value = value;\r\n\r\n  const event = new CustomEvent('change', {\r\n    bubbles: true,\r\n    cancelable: true,\r\n    detail: { value }\r\n  });\r\n  elementToChange.dispatchEvent(event);\r\n};\r\n\r\n/**\r\n * The elements within the combo box.\r\n * @typedef {Object} ComboBoxContext\r\n * @property {HTMLElement} comboBoxEl\r\n * @property {HTMLSelectElement} selectEl\r\n * @property {HTMLInputElement} inputEl\r\n * @property {HTMLUListElement} listEl\r\n * @property {HTMLDivElement} statusEl\r\n * @property {HTMLLIElement} focusedOptionEl\r\n * @property {HTMLLIElement} selectedOptionEl\r\n * @property {HTMLButtonElement} toggleListBtnEl\r\n * @property {HTMLButtonElement} clearInputBtnEl\r\n */\r\n\r\n/**\r\n * Get an object of elements belonging directly to the given\r\n * combo box component.\r\n *\r\n * @param {HTMLElement} el the element within the combo box\r\n * @returns {ComboBoxContext} elements\r\n */\r\nconst getComboBoxContext = (el) => {\r\n  const comboBoxEl = el.closest(COMBO_BOX);\r\n\r\n  if (!comboBoxEl) {\r\n    throw new Error(`Element is missing outer ${COMBO_BOX}`);\r\n  }\r\n\r\n  const selectEl = comboBoxEl.querySelector(SELECT);\r\n  const inputEl = comboBoxEl.querySelector(INPUT);\r\n  const listEl = comboBoxEl.querySelector(LIST);\r\n  const statusEl = comboBoxEl.querySelector(STATUS);\r\n  const focusedOptionEl = comboBoxEl.querySelector(LIST_OPTION_FOCUSED);\r\n  const selectedOptionEl = comboBoxEl.querySelector(LIST_OPTION_SELECTED);\r\n  const toggleListBtnEl = comboBoxEl.querySelector(TOGGLE_LIST_BUTTON);\r\n  const clearInputBtnEl = comboBoxEl.querySelector(CLEAR_INPUT_BUTTON);\r\n\r\n  const isPristine = comboBoxEl.classList.contains(COMBO_BOX_PRISTINE_CLASS);\r\n\r\n  return {\r\n    comboBoxEl,\r\n    selectEl,\r\n    inputEl,\r\n    listEl,\r\n    statusEl,\r\n    focusedOptionEl,\r\n    selectedOptionEl,\r\n    toggleListBtnEl,\r\n    clearInputBtnEl,\r\n    isPristine\r\n  };\r\n};\r\n\r\n/**\r\n * Disable the combo-box component\r\n *\r\n * @param {HTMLInputElement} el An element within the combo box component\r\n */\r\nconst disable = (el) => {\r\n  const { inputEl, toggleListBtnEl, clearInputBtnEl } = getComboBoxContext(el);\r\n\r\n  clearInputBtnEl.hidden = true;\r\n  clearInputBtnEl.disabled = true;\r\n  toggleListBtnEl.disabled = true;\r\n  inputEl.disabled = true;\r\n};\r\n\r\n/**\r\n * Enable the combo-box component\r\n *\r\n * @param {HTMLInputElement} el An element within the combo box component\r\n */\r\nconst enable = (el) => {\r\n  const { inputEl, toggleListBtnEl, clearInputBtnEl } = getComboBoxContext(el);\r\n\r\n  clearInputBtnEl.hidden = false;\r\n  clearInputBtnEl.disabled = false;\r\n  toggleListBtnEl.disabled = false;\r\n  inputEl.disabled = false;\r\n};\r\n\r\n/**\r\n * Enhance a select element into a combo box component.\r\n *\r\n * @param {HTMLElement} comboBoxEl The initial element of the combo box component\r\n */\r\nconst enhanceComboBox = (comboBoxEl) => {\r\n  const selectEl = comboBoxEl.querySelector('select');\r\n\r\n  if (!selectEl) {\r\n    throw new Error(`${COMBO_BOX} is missing inner select`);\r\n  }\r\n\r\n  const selectId = selectEl.id;\r\n  const listId = `${selectId}--list`;\r\n  const assistiveHintID = `${selectId}--assistiveHint`;\r\n  const additionalAttributes = [];\r\n  const defaultValue = comboBoxEl.dataset.defaultValue;\r\n  const placeholder = comboBoxEl.dataset.placeholder;\r\n  let selectedOption;\r\n\r\n  if (placeholder) {\r\n    additionalAttributes.push(`placeholder='${placeholder}'`);\r\n  }\r\n\r\n  if (defaultValue) {\r\n    for (let i = 0, len = selectEl.options.length; i < len; i += 1) {\r\n      const optionEl = selectEl.options[i];\r\n\r\n      if (optionEl.value === defaultValue) {\r\n        selectedOption = optionEl;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  selectEl.setAttribute('aria-hidden', 'true');\r\n  selectEl.setAttribute('tabindex', '-1');\r\n  selectEl.classList.add('usa-sr-only', SELECT_CLASS);\r\n  selectEl.id = '';\r\n  selectEl.value = '';\r\n\r\n  ['required', 'aria-label', 'aria-labelledby'].forEach((name) => {\r\n    if (selectEl.hasAttribute(name)) {\r\n      const value = selectEl.getAttribute(name);\r\n      additionalAttributes.push(`${name}='${value}'`);\r\n      selectEl.removeAttribute(name);\r\n    }\r\n  });\r\n\r\n  comboBoxEl.insertAdjacentHTML(\r\n    'beforeend',\r\n    [\r\n      `<input\r\n        aria-owns='${listId}'\r\n        aria-autocomplete='list'\r\n        aria-describedby='${assistiveHintID}'\r\n        aria-expanded='false'\r\n        autocapitalize='off'\r\n        autocomplete='off'\r\n        id='${selectId}'\r\n        class='${INPUT_CLASS}'\r\n        type='text'\r\n        role='combobox'\r\n        ${additionalAttributes.join(' ')}\r\n      >`,\r\n      `<span class='${CLEAR_INPUT_BUTTON_WRAPPER_CLASS}' tabindex='-1'>\r\n        <button type='button' class='${CLEAR_INPUT_BUTTON_CLASS}' aria-label='Clear the select contents'>&nbsp;</button>\r\n      </span>`,\r\n      `<span class='${INPUT_BUTTON_SEPARATOR_CLASS}'>&nbsp;</span>`,\r\n      `<span class='${TOGGLE_LIST_BUTTON_WRAPPER_CLASS}' tabindex='-1'>\r\n        <button type='button' tabindex='-1' class='${TOGGLE_LIST_BUTTON_CLASS}' aria-label='Toggle the dropdown list'>&nbsp;</button>\r\n      </span>`,\r\n      `<ul\r\n        tabindex='-1'\r\n        id='${listId}'\r\n        class='${LIST_CLASS}'\r\n        role='listbox'\r\n        hidden>\r\n      </ul>`,\r\n      `<div class='${STATUS_CLASS} usa-sr-only' role='status'></div>`,\r\n      `<span id='${assistiveHintID}' class='usa-sr-only'>\r\n        When autocomplete results are available use up and down arrows to review and enter to select.\r\n        Touch device users, explore by touch or with swipe gestures.\r\n      </span>`\r\n    ].join('')\r\n  );\r\n\r\n  if (selectedOption) {\r\n    const { inputEl } = getComboBoxContext(comboBoxEl);\r\n    changeElementValue(selectEl, selectedOption.value);\r\n    changeElementValue(inputEl, selectedOption.text);\r\n    comboBoxEl.classList.add(COMBO_BOX_PRISTINE_CLASS);\r\n  }\r\n\r\n  if (selectEl.disabled) {\r\n    disable(comboBoxEl);\r\n    selectEl.disabled = false;\r\n  }\r\n};\r\n\r\n/**\r\n * Manage the focused element within the list options when\r\n * navigating via keyboard.\r\n *\r\n * @param {HTMLElement} el An element within the combo box component\r\n * @param {HTMLElement} currentEl An element within the combo box component\r\n * @param {HTMLElement} nextEl An element within the combo box component\r\n * @param {Object} options options\r\n * @param {boolean} options.skipFocus skip focus of highlighted item\r\n * @param {boolean} options.preventScroll should skip procedure to scroll to element\r\n */\r\nconst highlightOption = (\r\n  el,\r\n  currentEl,\r\n  nextEl,\r\n  { skipFocus, preventScroll } = {}\r\n) => {\r\n  const { inputEl, listEl, selectedOptionEl } = getComboBoxContext(el);\r\n\r\n  if (selectedOptionEl) {\r\n    selectedOptionEl.tabIndex = '-1';\r\n  }\r\n\r\n  if (currentEl) {\r\n    currentEl.classList.remove(LIST_OPTION_FOCUSED_CLASS);\r\n    currentEl.setAttribute('aria-selected', 'false');\r\n    currentEl.setAttribute('tabIndex', '-1');\r\n  }\r\n\r\n  if (nextEl) {\r\n    inputEl.setAttribute('aria-activedescendant', nextEl.id);\r\n    nextEl.setAttribute('aria-selected', 'true');\r\n    nextEl.setAttribute('tabIndex', '0');\r\n    nextEl.classList.add(LIST_OPTION_FOCUSED_CLASS);\r\n\r\n    if (!preventScroll) {\r\n      const optionBottom = nextEl.offsetTop + nextEl.offsetHeight;\r\n      const currentBottom = listEl.scrollTop + listEl.offsetHeight;\r\n\r\n      if (optionBottom > currentBottom) {\r\n        listEl.scrollTop = optionBottom - listEl.offsetHeight;\r\n      }\r\n\r\n      if (nextEl.offsetTop < listEl.scrollTop) {\r\n        listEl.scrollTop = nextEl.offsetTop;\r\n      }\r\n    }\r\n\r\n    if (!skipFocus) {\r\n      nextEl.focus({ preventScroll });\r\n    }\r\n  }\r\n  else {\r\n    inputEl.setAttribute('aria-activedescendant', '');\r\n    inputEl.focus();\r\n  }\r\n};\r\n\r\n/**\r\n * Display the option list of a combo box component.\r\n *\r\n * @param {HTMLElement} el An element within the combo box component\r\n */\r\nconst displayList = (el) => {\r\n  const {\r\n    selectEl,\r\n    inputEl,\r\n    listEl,\r\n    statusEl,\r\n    isPristine\r\n  } = getComboBoxContext(el);\r\n  let selectedItemId;\r\n\r\n  const listOptionBaseId = `${listEl.id}--option-`;\r\n\r\n  const inputValue = (inputEl.value || '').toLowerCase();\r\n\r\n  const options = [];\r\n  for (let i = 0, len = selectEl.options.length; i < len; i += 1) {\r\n    const optionEl = selectEl.options[i];\r\n    if (\r\n      optionEl.value &&\r\n      (isPristine ||\r\n        !inputValue ||\r\n        optionEl.text.toLowerCase().indexOf(inputValue) !== -1)\r\n    ) {\r\n      if (selectEl.value && optionEl.value === selectEl.value) {\r\n        selectedItemId = `${listOptionBaseId}${options.length}`;\r\n      }\r\n\r\n      options.push(optionEl);\r\n    }\r\n  }\r\n\r\n  const numOptions = options.length;\r\n  const optionHtml = options\r\n    .map((option, index) => {\r\n      const optionId = `${listOptionBaseId}${index}`;\r\n      const classes = [LIST_OPTION_CLASS];\r\n      let tabindex = '-1';\r\n\r\n      if (optionId === selectedItemId) {\r\n        classes.push(LIST_OPTION_SELECTED_CLASS);\r\n        tabindex = '0';\r\n      }\r\n\r\n      if (!selectedItemId && index === 0) {\r\n        tabindex = '0';\r\n      }\r\n\r\n      return `<li\r\n          aria-selected='false'\r\n          aria-setsize='${options.length}'\r\n          aria-posinset='${index + 1}'\r\n          id='${optionId}'\r\n          class='${classes.join(' ')}'\r\n          tabindex='${tabindex}'\r\n          role='option'\r\n          data-value='${option.value}'\r\n        >${option.text}</li>`;\r\n    })\r\n    .join('');\r\n\r\n  const noResults = `<li class='${LIST_OPTION_CLASS}--no-results'>No results found</li>`;\r\n\r\n  listEl.hidden = false;\r\n  listEl.innerHTML = numOptions ? optionHtml : noResults;\r\n\r\n  inputEl.setAttribute('aria-expanded', 'true');\r\n\r\n  statusEl.innerHTML = numOptions\r\n    ? `${numOptions} result${numOptions > 1 ? 's' : ''} available.`\r\n    : 'No results.';\r\n\r\n  if (isPristine && selectedItemId) {\r\n    const selectedOptionEl = listEl.querySelector('#' + selectedItemId);\r\n    highlightOption(listEl, null, selectedOptionEl, {\r\n      skipFocus: true\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Hide the option list of a combo box component.\r\n *\r\n * @param {HTMLElement} el An element within the combo box component\r\n */\r\nconst hideList = (el) => {\r\n  const { inputEl, listEl, statusEl, focusedOptionEl } = getComboBoxContext(el);\r\n\r\n  statusEl.innerHTML = '';\r\n\r\n  inputEl.setAttribute('aria-expanded', 'false');\r\n  inputEl.setAttribute('aria-activedescendant', '');\r\n\r\n  if (focusedOptionEl) {\r\n    focusedOptionEl.classList.remove(LIST_OPTION_FOCUSED_CLASS);\r\n  }\r\n\r\n  listEl.scrollTop = 0;\r\n  listEl.hidden = true;\r\n};\r\n\r\n/**\r\n * Select an option list of the combo box component.\r\n *\r\n * @param {HTMLElement} listOptionEl The list option being selected\r\n */\r\nconst selectItem = (listOptionEl) => {\r\n  const { comboBoxEl, selectEl, inputEl } = getComboBoxContext(listOptionEl);\r\n\r\n  changeElementValue(selectEl, listOptionEl.dataset.value);\r\n  changeElementValue(inputEl, listOptionEl.textContent);\r\n  comboBoxEl.classList.add(COMBO_BOX_PRISTINE_CLASS);\r\n  hideList(comboBoxEl);\r\n  inputEl.focus();\r\n};\r\n\r\n/**\r\n * Clear the input of the combo box\r\n *\r\n * @param {HTMLButtonElement} clearButtonEl The clear input button\r\n */\r\nconst clearInput = (clearButtonEl) => {\r\n  const { comboBoxEl, listEl, selectEl, inputEl } = getComboBoxContext(\r\n    clearButtonEl\r\n  );\r\n  const listShown = !listEl.hidden;\r\n\r\n  if (selectEl.value) {\r\n    changeElementValue(selectEl);\r\n  }\r\n  if (inputEl.value) {\r\n    changeElementValue(inputEl);\r\n  }\r\n  comboBoxEl.classList.remove(COMBO_BOX_PRISTINE_CLASS);\r\n\r\n  if (listShown) {\r\n    displayList(comboBoxEl);\r\n  }\r\n  inputEl.focus();\r\n};\r\n\r\n/**\r\n * Reset the select based off of currently set select value\r\n *\r\n * @param {HTMLElement} el An element within the combo box component\r\n */\r\nconst resetSelection = (el) => {\r\n  const { comboBoxEl, selectEl, inputEl } = getComboBoxContext(el);\r\n\r\n  const selectValue = selectEl.value;\r\n  const inputValue = (inputEl.value || '').toLowerCase();\r\n\r\n  if (selectValue) {\r\n    for (let i = 0, len = selectEl.options.length; i < len; i += 1) {\r\n      const optionEl = selectEl.options[i];\r\n      if (optionEl.value === selectValue) {\r\n        if (inputValue !== optionEl.text) {\r\n          changeElementValue(inputEl, optionEl.text);\r\n        }\r\n        comboBoxEl.classList.add(COMBO_BOX_PRISTINE_CLASS);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (inputValue) {\r\n    changeElementValue(inputEl);\r\n  }\r\n};\r\n\r\n/**\r\n * Select an option list of the combo box component based off of\r\n * having a current focused list option or\r\n * having test that completely matches a list option.\r\n * Otherwise it clears the input and select.\r\n *\r\n * @param {HTMLElement} el An element within the combo box component\r\n */\r\nconst completeSelection = (el) => {\r\n  const {\r\n    comboBoxEl,\r\n    selectEl,\r\n    inputEl,\r\n    statusEl,\r\n    focusedOptionEl\r\n  } = getComboBoxContext(el);\r\n\r\n  statusEl.textContent = '';\r\n\r\n  if (focusedOptionEl) {\r\n    changeElementValue(selectEl, focusedOptionEl.dataset.value);\r\n    changeElementValue(inputEl, focusedOptionEl.textContent);\r\n    comboBoxEl.classList.add(COMBO_BOX_PRISTINE_CLASS);\r\n    return;\r\n  }\r\n\r\n  const inputValue = (inputEl.value || '').toLowerCase();\r\n\r\n  if (inputValue) {\r\n    for (let i = 0, len = selectEl.options.length; i < len; i += 1) {\r\n      const optionEl = selectEl.options[i];\r\n      if (optionEl.text.toLowerCase() === inputValue) {\r\n        changeElementValue(selectEl, optionEl.value);\r\n        changeElementValue(inputEl, optionEl.text);\r\n        comboBoxEl.classList.add(COMBO_BOX_PRISTINE_CLASS);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  resetSelection(comboBoxEl);\r\n};\r\n\r\n/**\r\n * Handle the escape event within the combo box component.\r\n *\r\n * @param {KeyboardEvent} event An event within the combo box component\r\n */\r\nconst handleEscape = (event) => {\r\n  const { comboBoxEl, inputEl } = getComboBoxContext(event.target);\r\n\r\n  hideList(comboBoxEl);\r\n  resetSelection(comboBoxEl);\r\n  inputEl.focus();\r\n};\r\n\r\n/**\r\n * Handle the down event within the combo box component.\r\n *\r\n * @param {KeyboardEvent} event An event within the combo box component\r\n */\r\nconst handleDown = (event) => {\r\n  const { comboBoxEl, listEl, focusedOptionEl } = getComboBoxContext(\r\n    event.target\r\n  );\r\n\r\n  if (listEl.hidden) {\r\n    displayList(comboBoxEl);\r\n  }\r\n\r\n  let nextOptionEl =\r\n    listEl.querySelector(LIST_OPTION_SELECTED) ||\r\n    listEl.querySelector(LIST_OPTION);\r\n\r\n  if (focusedOptionEl) {\r\n    nextOptionEl = focusedOptionEl.nextSibling;\r\n  }\r\n\r\n  if (nextOptionEl) {\r\n    highlightOption(comboBoxEl, focusedOptionEl, nextOptionEl);\r\n  }\r\n\r\n  event.preventDefault();\r\n};\r\n\r\n/**\r\n * Handle the enter event from an input element within the combo box component.\r\n *\r\n * @param {KeyboardEvent} event An event within the combo box component\r\n */\r\nconst handleEnterFromInput = (event) => {\r\n  const { comboBoxEl, listEl } = getComboBoxContext(event.target);\r\n  const listShown = !listEl.hidden;\r\n\r\n  completeSelection(comboBoxEl);\r\n\r\n  if (listShown) {\r\n    hideList(comboBoxEl);\r\n  }\r\n\r\n  event.preventDefault();\r\n};\r\n\r\n/**\r\n * Handle the tab event from an list option element within the combo box component.\r\n *\r\n * @param {KeyboardEvent} event An event within the combo box component\r\n */\r\nconst handleTabFromListOption = (event) => {\r\n  selectItem(event.target);\r\n  event.preventDefault();\r\n};\r\n\r\n/**\r\n * Handle the enter event from list option within the combo box component.\r\n *\r\n * @param {KeyboardEvent} event An event within the combo box component\r\n */\r\nconst handleEnterFromListOption = (event) => {\r\n  selectItem(event.target);\r\n  event.preventDefault();\r\n};\r\n\r\n/**\r\n * Handle the up event from list option within the combo box component.\r\n *\r\n * @param {KeyboardEvent} event An event within the combo box component\r\n */\r\nconst handleUpFromListOption = (event) => {\r\n  const { comboBoxEl, listEl, focusedOptionEl } = getComboBoxContext(\r\n    event.target\r\n  );\r\n  const nextOptionEl = focusedOptionEl && focusedOptionEl.previousSibling;\r\n  const listShown = !listEl.hidden;\r\n\r\n  highlightOption(comboBoxEl, focusedOptionEl, nextOptionEl);\r\n\r\n  if (listShown) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  if (!nextOptionEl) {\r\n    hideList(comboBoxEl);\r\n  }\r\n};\r\n\r\n/**\r\n * Select list option on the mousemove event.\r\n *\r\n * @param {MouseEvent} event The mousemove event\r\n * @param {HTMLLIElement} listOptionEl An element within the combo box component\r\n */\r\nconst handleMousemove = (listOptionEl) => {\r\n  const isCurrentlyFocused = listOptionEl.classList.contains(\r\n    LIST_OPTION_FOCUSED_CLASS\r\n  );\r\n\r\n  if (isCurrentlyFocused) {\r\n    return;\r\n  }\r\n\r\n  const { comboBoxEl, focusedOptionEl } = getComboBoxContext(listOptionEl);\r\n\r\n  highlightOption(comboBoxEl, focusedOptionEl, listOptionEl, {\r\n    preventScroll: true\r\n  });\r\n};\r\n\r\n/**\r\n * Toggle the list when the button is clicked\r\n *\r\n * @param {HTMLElement} el An element within the combo box component\r\n */\r\nconst toggleList = (el) => {\r\n  const { comboBoxEl, listEl, inputEl } = getComboBoxContext(el);\r\n\r\n  if (listEl.hidden) {\r\n    displayList(comboBoxEl);\r\n  }\r\n  else {\r\n    hideList(comboBoxEl);\r\n  }\r\n\r\n  inputEl.focus();\r\n};\r\n\r\n/**\r\n * Handle click from input\r\n *\r\n * @param {HTMLInputElement} el An element within the combo box component\r\n */\r\nconst handleClickFromInput = (el) => {\r\n  const { comboBoxEl, listEl } = getComboBoxContext(el);\r\n\r\n  if (listEl.hidden) {\r\n    displayList(comboBoxEl);\r\n  }\r\n};\r\n\r\nconst comboBox = behavior(\r\n  {\r\n    [CLICK]: {\r\n      [INPUT]() {\r\n        if (this.disabled) {\r\n          return;\r\n        }\r\n        handleClickFromInput(this);\r\n      },\r\n      [TOGGLE_LIST_BUTTON]() {\r\n        if (this.disabled) {\r\n          return;\r\n        }\r\n        toggleList(this);\r\n      },\r\n      [LIST_OPTION]() {\r\n        if (this.disabled) {\r\n          return;\r\n        }\r\n        selectItem(this);\r\n      },\r\n      [CLEAR_INPUT_BUTTON]() {\r\n        if (this.disabled) {\r\n          return;\r\n        }\r\n        clearInput(this);\r\n      }\r\n    },\r\n    focusout: {\r\n      [COMBO_BOX](event) {\r\n        if (!this.contains(event.relatedTarget)) {\r\n          resetSelection(this);\r\n          hideList(this);\r\n        }\r\n      }\r\n    },\r\n    keydown: {\r\n      [COMBO_BOX]: receptor.keymap({\r\n        ArrowDown: handleDown,\r\n        Down: handleDown,\r\n        Escape: handleEscape\r\n      }),\r\n      [INPUT]: receptor.keymap({\r\n        Enter: handleEnterFromInput\r\n      }),\r\n      [LIST_OPTION]: receptor.keymap({\r\n        ArrowUp: handleUpFromListOption,\r\n        Up: handleUpFromListOption,\r\n        Enter: handleEnterFromListOption,\r\n        Tab: handleTabFromListOption,\r\n        'Shift+Tab': noop\r\n      })\r\n    },\r\n    input: {\r\n      [INPUT]() {\r\n        const comboBoxEl = this.closest(COMBO_BOX);\r\n        comboBoxEl.classList.remove(COMBO_BOX_PRISTINE_CLASS);\r\n        displayList(this);\r\n      }\r\n    },\r\n    mousemove: {\r\n      [LIST_OPTION]() {\r\n        handleMousemove(this);\r\n      }\r\n    }\r\n  },\r\n  {\r\n    init(root) {\r\n      select(COMBO_BOX, root).forEach((comboBoxEl) => {\r\n        enhanceComboBox(comboBoxEl);\r\n      });\r\n    },\r\n    getComboBoxContext,\r\n    disable,\r\n    enable,\r\n    displayList,\r\n    hideList\r\n  }\r\n);\r\n\r\nmodule.exports = comboBox;\r\n"],"file":"combo-box.js"}