{"version":3,"sources":["src/patterns/components/usa-search/search.js"],"names":["receptor","require","ignore","behavior","select","CLICK","BUTTON","FORM","INPUT","CONTEXT","lastButton","getForm","button","context","closest","querySelector","document","toggleSearch","active","form","Error","hidden","input","focus","listener","hideSearch","call","body","removeEventListener","setTimeout","addEventListener","showSearch","undefined","search","init","target","forEach","teardown","module","exports"],"mappings":"AAAA;;;;AACA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBC,MAArC;;AACA,IAAMC,QAAQ,GAAGF,OAAO,CAAC,yBAAD,CAAxB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAMI,KAAK,GAAG,OAAd;AACA,IAAMC,MAAM,GAAG,mBAAf;AACA,IAAMC,IAAI,GAAG,iBAAb;AACA,IAAMC,KAAK,GAAG,eAAd;AACA,IAAMC,OAAO,GAAG,QAAhB,C,CAA0B;;AAE1B,IAAIC,UAAJ;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAAY;AAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAP,CAAeL,OAAf,CAAhB;AACA,SAAOI,OAAO,GAAGA,OAAO,CAACE,aAAR,CAAsBR,IAAtB,CAAH,GAAiCS,QAAQ,CAACD,aAAT,CAAuBR,IAAvB,CAA/C;AACD,CAHD;;AAKA,IAAMU,YAAY,GAAG,SAAfA,YAAe,CAACL,MAAD,EAASM,MAAT,EAAoB;AACvC,MAAMC,IAAI,GAAGR,OAAO,CAACC,MAAD,CAApB;;AAEA,MAAI,CAACO,IAAL,EAAW;AACT,UAAM,IAAIC,KAAJ,cAAgBb,IAAhB,yCAAmDE,OAAnD,OAAN;AACD;AAED;;;AACAG,EAAAA,MAAM,CAACS,MAAP,GAAgBH,MAAhB;AACAC,EAAAA,IAAI,CAACE,MAAL,GAAc,CAACH,MAAf;AACA;;AAEA,MAAI,CAACA,MAAL,EAAa;AACX;AACD;;AAED,MAAMI,KAAK,GAAGH,IAAI,CAACJ,aAAL,CAAmBP,KAAnB,CAAd;;AAEA,MAAIc,KAAJ,EAAW;AACTA,IAAAA,KAAK,CAACC,KAAN;AACD,GApBsC,CAqBvC;AACA;;;AACA,MAAMC,QAAQ,GAAGxB,QAAQ,CAACE,MAAT,CAAgBiB,IAAhB,EAAsB,YAAM;AAC3C,QAAIT,UAAJ,EAAgB;AACde,MAAAA,UAAU,CAACC,IAAX,CAAgBhB,UAAhB,EADc,CACe;AAC9B;;AAEDM,IAAAA,QAAQ,CAACW,IAAT,CAAcC,mBAAd,CAAkCvB,KAAlC,EAAyCmB,QAAzC;AACD,GANgB,CAAjB,CAvBuC,CA+BvC;AACA;AACA;AACA;AACA;;AACAK,EAAAA,UAAU,CAAC,YAAM;AACfb,IAAAA,QAAQ,CAACW,IAAT,CAAcG,gBAAd,CAA+BzB,KAA/B,EAAsCmB,QAAtC;AACD,GAFS,EAEP,CAFO,CAAV;AAGD,CAvCD;;AAyCA,SAASO,UAAT,GAAsB;AACpBd,EAAAA,YAAY,CAAC,IAAD,EAAO,IAAP,CAAZ;AACAP,EAAAA,UAAU,GAAG,IAAb;AACD;;AAED,SAASe,UAAT,GAAsB;AACpBR,EAAAA,YAAY,CAAC,IAAD,EAAO,KAAP,CAAZ;AACAP,EAAAA,UAAU,GAAGsB,SAAb;AACD;;AAED,IAAMC,MAAM,GAAG9B,QAAQ,qBAElBE,KAFkB,sBAGhBC,MAHgB,EAGPyB,UAHO,IAMrB;AACEG,EAAAA,IADF,gBACOC,MADP,EACe;AACX/B,IAAAA,MAAM,CAACE,MAAD,EAAS6B,MAAT,CAAN,CAAuBC,OAAvB,CAA+B,UAACxB,MAAD,EAAY;AACzCK,MAAAA,YAAY,CAACL,MAAD,EAAS,KAAT,CAAZ;AACD,KAFD;AAGD,GALH;AAMEyB,EAAAA,QANF,sBAMa;AACT;AACA3B,IAAAA,UAAU,GAAGsB,SAAb;AACD;AATH,CANqB,CAAvB;AAmBAM,MAAM,CAACC,OAAP,GAAiBN,MAAjB","sourcesContent":["'use strict';\r\nconst receptor = require('receptor').ignore;\r\nconst behavior = require('../../../utils/behavior');\r\nconst select = require('../../../utils/select');\r\n\r\nconst CLICK = 'click';\r\nconst BUTTON = '.js-search-button';\r\nconst FORM = '.js-search-form';\r\nconst INPUT = '[type=search]';\r\nconst CONTEXT = 'header'; // XXX\r\n\r\nlet lastButton;\r\n\r\nconst getForm = (button) => {\r\n  const context = button.closest(CONTEXT);\r\n  return context ? context.querySelector(FORM) : document.querySelector(FORM);\r\n};\r\n\r\nconst toggleSearch = (button, active) => {\r\n  const form = getForm(button);\r\n\r\n  if (!form) {\r\n    throw new Error(`No ${FORM} found for search toggle in ${CONTEXT}!`);\r\n  }\r\n\r\n  /* eslint-disable no-param-reassign */\r\n  button.hidden = active;\r\n  form.hidden = !active;\r\n  /* eslint-enable */\r\n\r\n  if (!active) {\r\n    return;\r\n  }\r\n\r\n  const input = form.querySelector(INPUT);\r\n\r\n  if (input) {\r\n    input.focus();\r\n  }\r\n  // when the user clicks _outside_ of the form w/ignore(): hide the\r\n  // search, then remove the listener\r\n  const listener = receptor.ignore(form, () => {\r\n    if (lastButton) {\r\n      hideSearch.call(lastButton); // eslint-disable-line no-use-before-define\r\n    }\r\n\r\n    document.body.removeEventListener(CLICK, listener);\r\n  });\r\n\r\n  // Normally we would just run this code without a timeout, but\r\n  // IE11 and Edge will actually call the listener *immediately* because\r\n  // they are currently handling this exact type of event, so we'll\r\n  // make sure the browser is done handling the current click event,\r\n  // if any, before we attach the listener.\r\n  setTimeout(() => {\r\n    document.body.addEventListener(CLICK, listener);\r\n  }, 0);\r\n};\r\n\r\nfunction showSearch() {\r\n  toggleSearch(this, true);\r\n  lastButton = this;\r\n}\r\n\r\nfunction hideSearch() {\r\n  toggleSearch(this, false);\r\n  lastButton = undefined;\r\n}\r\n\r\nconst search = behavior(\r\n  {\r\n    [CLICK]: {\r\n      [BUTTON]: showSearch\r\n    }\r\n  },\r\n  {\r\n    init(target) {\r\n      select(BUTTON, target).forEach((button) => {\r\n        toggleSearch(button, false);\r\n      });\r\n    },\r\n    teardown() {\r\n      // forget the last button clicked\r\n      lastButton = undefined;\r\n    }\r\n  }\r\n);\r\n\r\nmodule.exports = search;\r\n"],"file":"search.js"}