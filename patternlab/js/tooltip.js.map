{"version":3,"sources":["src/patterns/components/usa-tooltip/tooltip.js"],"names":["select","require","behavior","PREFIX","prefix","isElementInViewport","TOOLTIP","TOOLTIP_TRIGGER_CLASS","TOOLTIP_CLASS","TOOLTIP_BODY_CLASS","SET_CLASS","VISIBLE_CLASS","TRIANGLE_SIZE","SPACER","ADJUST_WIDTH_CLASS","addListenerMulti","element","eventNames","listener","events","split","i","iLen","length","addEventListener","showToolTip","tooltipBody","tooltipTrigger","position","wrapper","tooltipPosition","setAttribute","classList","add","tooltipWidth","offsetWidth","tooltipHeight","offsetHeight","offsetForTopMargin","parseInt","window","getComputedStyle","getPropertyValue","offsetForBottomMargin","offsetForTopPadding","offsetForBottomPadding","offsetForTooltipBodyHeight","leftOffset","offsetLeft","toolTipBodyWidth","adjustHorizontalCenter","adjustToEdgeX","adjustToEdgeY","setPositionClass","setPos","remove","positionTop","e","style","marginLeft","marginBottom","positionBottom","marginTop","positionRight","bottom","positionLeft","setTimeout","makeVisible","hideToolTip","setUpAttributes","tooltipID","Math","floor","random","tooltipContent","getAttribute","document","createElement","additionalClasses","parentNode","insertBefore","appendChild","classesArray","forEach","classname","innerHTML","tooltip","init","root","handleShow","handleHide","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n// Tooltips\r\nconst select = require('../../../utils/select');\r\nconst behavior = require('../../../utils/behavior');\r\nconst { prefix: PREFIX } = require('../../../config');\r\nconst isElementInViewport = require('../../../utils/is-in-viewport');\r\n\r\nconst TOOLTIP = `.${PREFIX}-tooltip`;\r\nconst TOOLTIP_TRIGGER_CLASS = `${PREFIX}-tooltip__trigger`;\r\nconst TOOLTIP_CLASS = `${PREFIX}-tooltip`;\r\nconst TOOLTIP_BODY_CLASS = `${PREFIX}-tooltip__body`;\r\nconst SET_CLASS = 'is-set';\r\nconst VISIBLE_CLASS = 'is-visible';\r\nconst TRIANGLE_SIZE = 5;\r\nconst SPACER = 2;\r\nconst ADJUST_WIDTH_CLASS = `${PREFIX}-tooltip__body--wrap`;\r\n\r\n/**\r\n * Add one or more listeners to an element\r\n * @param {DOMElement} element - DOM element to add listeners to\r\n * @param {events} eventNames - space separated list of event names, e.g. 'click change'\r\n * @param {Function} listener - function to attach for each event as a listener\r\n */\r\nconst addListenerMulti = (element, eventNames, listener) => {\r\n  const events = eventNames.split(' ');\r\n  for (let i = 0, iLen = events.length; i < iLen; i += 1) {\r\n    element.addEventListener(events[i], listener, false);\r\n  }\r\n};\r\n\r\n/**\r\n * Shows the tooltip\r\n * @param {HTMLElement} tooltipTrigger - the element that initializes the tooltip\r\n */\r\nconst showToolTip = (tooltipBody, tooltipTrigger, position, wrapper) => {\r\n  let tooltipPosition = position;\r\n\r\n  tooltipBody.setAttribute('aria-hidden', 'false');\r\n\r\n  // This sets up the tooltip body. The opacity is 0, but\r\n  // we can begin running the calculations below.\r\n  tooltipBody.classList.add(SET_CLASS);\r\n\r\n  // Calculate sizing and adjustments for positioning\r\n  const tooltipWidth = tooltipTrigger.offsetWidth;\r\n  const tooltipHeight = tooltipTrigger.offsetHeight;\r\n  const offsetForTopMargin = parseInt(\r\n    window.getComputedStyle(tooltipTrigger).getPropertyValue('margin-top'),\r\n    10\r\n  );\r\n  const offsetForBottomMargin = parseInt(\r\n    window.getComputedStyle(tooltipTrigger).getPropertyValue('margin-bottom'),\r\n    10\r\n  );\r\n  const offsetForTopPadding = parseInt(\r\n    window.getComputedStyle(wrapper).getPropertyValue('padding-top'),\r\n    10\r\n  );\r\n  const offsetForBottomPadding = parseInt(\r\n    window.getComputedStyle(wrapper).getPropertyValue('padding-bottom'),\r\n    10\r\n  );\r\n  const offsetForTooltipBodyHeight = parseInt(\r\n    window.getComputedStyle(tooltipBody).getPropertyValue('height'),\r\n    10\r\n  );\r\n  const leftOffset = tooltipTrigger.offsetLeft;\r\n  const toolTipBodyWidth = tooltipBody.offsetWidth;\r\n  const adjustHorizontalCenter = tooltipWidth / 2 + leftOffset;\r\n  const adjustToEdgeX = tooltipWidth + TRIANGLE_SIZE + SPACER;\r\n  const adjustToEdgeY = tooltipHeight + TRIANGLE_SIZE + SPACER;\r\n\r\n  /**\r\n   * Position the tooltip body when the trigger is hovered\r\n   * Removes old positioning classnames and reapplies. This allows\r\n   * positioning to change in case the user resizes browser or DOM manipulation\r\n   * causes tooltip to get clipped from viewport\r\n   *\r\n   * @param {string} setPos - can be \"top\", \"bottom\", \"right\", \"left\"\r\n   */\r\n  const setPositionClass = (setPos) => {\r\n    tooltipBody.classList.remove(`${TOOLTIP_BODY_CLASS}--${tooltipPosition}`);\r\n    tooltipPosition = setPos;\r\n    tooltipBody.classList.add(`${TOOLTIP_BODY_CLASS}--${setPos}`);\r\n  };\r\n\r\n  /**\r\n   * Positions tooltip at the top\r\n   * We check if the element is in the viewport so we know whether or not we\r\n   * need to constrain the width\r\n   * @param {HTMLElement} e - this is the tooltip body\r\n   */\r\n  const positionTop = (e) => {\r\n    setPositionClass('top');\r\n    e.style.marginLeft = `${adjustHorizontalCenter}px`;\r\n    if (!isElementInViewport(e)) {\r\n      e.classList.add(ADJUST_WIDTH_CLASS);\r\n    }\r\n    e.style.marginBottom = `${adjustToEdgeY +\r\n      offsetForBottomMargin +\r\n      offsetForBottomPadding}px`;\r\n  };\r\n\r\n  /**\r\n   * Positions tooltip at the bottom\r\n   * We check if the element is in theviewport so we know whether or not we\r\n   * need to constrain the width\r\n   * @param {HTMLElement} e - this is the tooltip body\r\n   */\r\n  const positionBottom = (e) => {\r\n    setPositionClass('bottom');\r\n    e.style.marginLeft = `${adjustHorizontalCenter}px`;\r\n    if (!isElementInViewport(e)) {\r\n      e.classList.add(ADJUST_WIDTH_CLASS);\r\n    }\r\n    e.style.marginTop = `${adjustToEdgeY +\r\n      offsetForTopMargin +\r\n      offsetForTopPadding}px`;\r\n  };\r\n\r\n  /**\r\n   * Positions tooltip at the right\r\n   * @param {HTMLElement} e - this is the tooltip body\r\n   */\r\n  const positionRight = (e) => {\r\n    setPositionClass('right');\r\n    e.style.marginBottom = '0';\r\n    e.style.marginLeft = `${adjustToEdgeX + leftOffset}px`;\r\n    e.style.bottom = `${(tooltipHeight - offsetForTooltipBodyHeight) / 2 +\r\n      offsetForBottomMargin +\r\n      offsetForBottomPadding}px`;\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Positions tooltip at the right\r\n   * @param {HTMLElement} e - this is the tooltip body\r\n   */\r\n  const positionLeft = (e) => {\r\n    setPositionClass('left');\r\n    e.style.marginBottom = '0';\r\n    if (leftOffset > toolTipBodyWidth) {\r\n      e.style.marginLeft = `${leftOffset -\r\n        toolTipBodyWidth -\r\n        (TRIANGLE_SIZE + SPACER)}px`;\r\n    }\r\n    else {\r\n      e.style.marginLeft = `-${toolTipBodyWidth -\r\n        leftOffset +\r\n        (TRIANGLE_SIZE + SPACER)}px`;\r\n    }\r\n    e.style.bottom = `${(tooltipHeight - offsetForTooltipBodyHeight) / 2 +\r\n      offsetForBottomMargin +\r\n      offsetForBottomPadding}px`;\r\n  };\r\n\r\n  /**\r\n   * We try to set the position based on the\r\n   * original intention, but make adjustments\r\n   * if the element is clipped out of the viewport\r\n   */\r\n  switch (position) {\r\n    case 'top':\r\n      positionTop(tooltipBody);\r\n      if (!isElementInViewport(tooltipBody)) {\r\n        positionBottom(tooltipBody);\r\n      }\r\n      break;\r\n    case 'bottom':\r\n      positionBottom(tooltipBody);\r\n      if (!isElementInViewport(tooltipBody)) {\r\n        positionTop(tooltipBody);\r\n      }\r\n      break;\r\n    case 'right':\r\n      positionRight(tooltipBody);\r\n      if (!isElementInViewport(tooltipBody)) {\r\n        positionLeft(tooltipBody);\r\n        if (!isElementInViewport(tooltipBody)) {\r\n          positionTop(tooltipBody);\r\n        }\r\n      }\r\n      break;\r\n    case 'left':\r\n      positionLeft(tooltipBody);\r\n      if (!isElementInViewport(tooltipBody)) {\r\n        positionRight(tooltipBody);\r\n        if (!isElementInViewport(tooltipBody)) {\r\n          positionTop(tooltipBody);\r\n        }\r\n      }\r\n      break;\r\n\r\n    default:\r\n      // skip default case\r\n      break;\r\n  }\r\n\r\n  /**\r\n   * Actually show the tooltip. The VISIBLE_CLASS\r\n   * will change the opacity to 1\r\n   */\r\n  setTimeout(function makeVisible() {\r\n    tooltipBody.classList.add(VISIBLE_CLASS);\r\n  }, 20);\r\n};\r\n\r\n/**\r\n * Removes all the properties to show and position the tooltip,\r\n * and resets the tooltip position to the original intention\r\n * in case the window is resized or the element is moved through\r\n * DOM maniulation.\r\n * @param {HTMLElement} tooltipBody - The body of the tooltip\r\n */\r\nconst hideToolTip = (tooltipBody) => {\r\n  tooltipBody.classList.remove(VISIBLE_CLASS);\r\n  tooltipBody.classList.remove(SET_CLASS);\r\n  tooltipBody.classList.remove(ADJUST_WIDTH_CLASS);\r\n  tooltipBody.setAttribute('aria-hidden', 'true');\r\n};\r\n\r\n/**\r\n * Setup the tooltip component\r\n * @param {HTMLElement} tooltipTrigger The element that creates the tooltip\r\n */\r\nconst setUpAttributes = (tooltipTrigger) => {\r\n  const tooltipID = `tooltip-${Math.floor(Math.random() * 900000) + 100000}`;\r\n  const tooltipContent = tooltipTrigger.getAttribute('title');\r\n  const wrapper = document.createElement('span');\r\n  const tooltipBody = document.createElement('span');\r\n  const position = tooltipTrigger.getAttribute('data-position')\r\n    ? tooltipTrigger.getAttribute('data-position')\r\n    : 'top';\r\n  const additionalClasses = tooltipTrigger.getAttribute('data-classes');\r\n\r\n  // Set up tooltip attributes\r\n  tooltipTrigger.setAttribute('aria-describedby', tooltipID);\r\n  tooltipTrigger.setAttribute('tabindex', '0');\r\n  tooltipTrigger.setAttribute('title', '');\r\n  tooltipTrigger.classList.remove(TOOLTIP_CLASS);\r\n  tooltipTrigger.classList.add(TOOLTIP_TRIGGER_CLASS);\r\n\r\n  // insert wrapper before el in the DOM tree\r\n  tooltipTrigger.parentNode.insertBefore(wrapper, tooltipTrigger);\r\n\r\n  // set up the wrapper\r\n  wrapper.appendChild(tooltipTrigger);\r\n  wrapper.classList.add(TOOLTIP_CLASS);\r\n  wrapper.appendChild(tooltipBody);\r\n\r\n  // Apply additional class names to wrapper element\r\n  if (additionalClasses) {\r\n    const classesArray = additionalClasses.split(' ');\r\n    classesArray.forEach((classname) => wrapper.classList.add(classname));\r\n  }\r\n\r\n  // set up the tooltip body\r\n  tooltipBody.classList.add(TOOLTIP_BODY_CLASS);\r\n  tooltipBody.setAttribute('id', tooltipID);\r\n  tooltipBody.setAttribute('role', 'tooltip');\r\n  tooltipBody.setAttribute('aria-hidden', 'true');\r\n\r\n  // place the text in the tooltip\r\n  tooltipBody.innerHTML = tooltipContent;\r\n\r\n  return { tooltipBody, position, tooltipContent, wrapper };\r\n};\r\n\r\n// Setup our function to run on various events\r\nconst tooltip = behavior(\r\n  {},\r\n  {\r\n    init(root) {\r\n      select(TOOLTIP, root).forEach((tooltipTrigger) => {\r\n        const {\r\n          tooltipBody,\r\n          position,\r\n          tooltipContent,\r\n          wrapper\r\n        } = setUpAttributes(tooltipTrigger);\r\n\r\n        if (tooltipContent) {\r\n          // Listeners for showing and hiding the tooltip\r\n          addListenerMulti(\r\n            tooltipTrigger,\r\n            'mouseenter focus',\r\n            function handleShow() {\r\n              showToolTip(tooltipBody, tooltipTrigger, position, wrapper);\r\n              return false;\r\n            }\r\n          );\r\n\r\n          // Keydown here prevents tooltips from being read twice by screen reader. also allows excape key to close it (along with any other.)\r\n          addListenerMulti(\r\n            tooltipTrigger,\r\n            'mouseleave blur keydown',\r\n            function handleHide() {\r\n              hideToolTip(tooltipBody);\r\n              return false;\r\n            }\r\n          );\r\n        }\r\n        else {\r\n          // throw error or let other tooltips on page function?\r\n        }\r\n      });\r\n    }\r\n  }\r\n);\r\n\r\nmodule.exports = tooltip;\r\n"],"file":"tooltip.js"}